usu_building_public_green = {
	building_group = USU_bg_public_greens
	icon = "gfx/interface/icons/building_icons/USU_public_green.dds"
	
	has_max_level = yes
	
	unlocking_technologies = {
		enclosure
	}
	
	production_method_groups = {
		USU_pmg_public_space_management
		USU_pmg_public_parklands
	}
	
	can_build_government = {
		OR = {
			free_arable_land > {
				value = 0
				b:usu_building_public_green ?= {
					add = level_after_queued_constructions
					subtract = level
				}
			}
			NOT = {
				b:usu_building_public_green ?= {
					level_after_queued_constructions >= 3
				}
			}
		}
	}
	
	can_build_private = {
		OR = {
			free_arable_land > {
				value = 0
				b:usu_building_public_green ?= {
					add = level_after_queued_constructions
					subtract = level
				}
			}
			NOT = {
				b:usu_building_public_green ?= {
					level_after_queued_constructions >= 3
				}
			}
		}
	}
	
	required_construction = construction_cost_low
	
	ownership_type = self
	
	ai_value = {
		value = 1000	# default
		
		if = { # Try and have at least 1
			limit = {
				NOR = {
					has_building = usu_building_public_green
					any_scope_building = {
						is_building_type = usu_building_public_green
						is_under_construction = yes
					}
				}
			}
			add = 3000
		}
		
		if = {
			limit = {
				exists = b:usu_building_public_green
			}
			subtract = {
				sg:services ?= {
					value = state_goods_delta
				}
				add = { # transport production once all queued levels are employed
					value = 0
					b:usu_building_public_green = {
						add = modifier:goods_output_services_add
						#multiply = {
						#	value = modifier:goods_output_services_mult
						#	add = 1
						#}
						save_temporary_value_as = current_port_services_production
						if = {
							limit = {
								level > 0
								occupancy > 0
							}
							divide = occupancy
							divide = level
						}
						else = {
							value = 59 # Assume services production of best PM
						}
						multiply = {
							value = level_after_queued_constructions
							add = 1
						}
						subtract = scope:current_port_services_production
					}
				}
				min = 0
				sg:services ?= {
					divide = {
						value = state_goods_consumption
						min = 1
					}
				}
				multiply = 6000
			}
		}
	}
	
	background = "gfx/interface/icons/building_icons/backgrounds/building_panel_bg_monuments.dds"
}
